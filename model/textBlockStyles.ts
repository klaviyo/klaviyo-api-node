/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
export class TextBlockStyles {
    'backgroundColor'?: string | null;
    'blockBackgroundColor'?: string | null;
    'blockBorderColor'?: string | null;
    /**
    * Border style.
    */
    'blockBorderStyle'?: TextBlockStyles.BlockBorderStyleEnum | 'dashed' | 'dotted' | 'groove' | 'inset' | 'none' | 'outset' | 'ridge' | 'solid' | null;
    'blockBorderWidth'?: number | null;
    'blockPaddingBottom'?: number | null;
    'blockPaddingLeft'?: number | null;
    'blockPaddingRight'?: number | null;
    'blockPaddingTop'?: number | null;
    'color'?: string | null;
    'extraCssClass'?: string | null;
    'fontFamily'?: string | null;
    'fontSize'?: number | null;
    /**
    * Font style.
    */
    'fontStyle'?: TextBlockStyles.FontStyleEnum | 'italic' | 'normal' | null;
    'fontWeight'?: string | null;
    'innerPaddingBottom'?: number | null;
    'innerPaddingLeft'?: number | null;
    'innerPaddingRight'?: number | null;
    'innerPaddingTop'?: number | null;
    'letterSpacing'?: number | null;
    'lineHeight'?: number | null;
    'mobileStretchContent'?: boolean | null;
    /**
    * Text Alignment.
    */
    'textAlign'?: TextBlockStyles.TextAlignEnum | 'center' | 'left' | 'right' | null;
    'textDecoration'?: string | null;
    /**
    * Text table layout.
    */
    'textTableLayout'?: TextBlockStyles.TextTableLayoutEnum | 'auto' | 'fixed' | 'inherit' | 'initial' | null;


    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "backgroundColor",
            "baseName": "background_color",
            "type": "string"
        },
        {
            "name": "blockBackgroundColor",
            "baseName": "block_background_color",
            "type": "string"
        },
        {
            "name": "blockBorderColor",
            "baseName": "block_border_color",
            "type": "string"
        },
        {
            "name": "blockBorderStyle",
            "baseName": "block_border_style",
            "type": "TextBlockStyles.BlockBorderStyleEnum"
        },
        {
            "name": "blockBorderWidth",
            "baseName": "block_border_width",
            "type": "number"
        },
        {
            "name": "blockPaddingBottom",
            "baseName": "block_padding_bottom",
            "type": "number"
        },
        {
            "name": "blockPaddingLeft",
            "baseName": "block_padding_left",
            "type": "number"
        },
        {
            "name": "blockPaddingRight",
            "baseName": "block_padding_right",
            "type": "number"
        },
        {
            "name": "blockPaddingTop",
            "baseName": "block_padding_top",
            "type": "number"
        },
        {
            "name": "color",
            "baseName": "color",
            "type": "string"
        },
        {
            "name": "extraCssClass",
            "baseName": "extra_css_class",
            "type": "string"
        },
        {
            "name": "fontFamily",
            "baseName": "font_family",
            "type": "string"
        },
        {
            "name": "fontSize",
            "baseName": "font_size",
            "type": "number"
        },
        {
            "name": "fontStyle",
            "baseName": "font_style",
            "type": "TextBlockStyles.FontStyleEnum"
        },
        {
            "name": "fontWeight",
            "baseName": "font_weight",
            "type": "string"
        },
        {
            "name": "innerPaddingBottom",
            "baseName": "inner_padding_bottom",
            "type": "number"
        },
        {
            "name": "innerPaddingLeft",
            "baseName": "inner_padding_left",
            "type": "number"
        },
        {
            "name": "innerPaddingRight",
            "baseName": "inner_padding_right",
            "type": "number"
        },
        {
            "name": "innerPaddingTop",
            "baseName": "inner_padding_top",
            "type": "number"
        },
        {
            "name": "letterSpacing",
            "baseName": "letter_spacing",
            "type": "number"
        },
        {
            "name": "lineHeight",
            "baseName": "line_height",
            "type": "number"
        },
        {
            "name": "mobileStretchContent",
            "baseName": "mobile_stretch_content",
            "type": "boolean"
        },
        {
            "name": "textAlign",
            "baseName": "text_align",
            "type": "TextBlockStyles.TextAlignEnum"
        },
        {
            "name": "textDecoration",
            "baseName": "text_decoration",
            "type": "string"
        },
        {
            "name": "textTableLayout",
            "baseName": "text_table_layout",
            "type": "TextBlockStyles.TextTableLayoutEnum"
        }    ];

    static getAttributeTypeMap() {
        return TextBlockStyles.attributeTypeMap;
    }
}

export namespace TextBlockStyles {
    export enum BlockBorderStyleEnum {
        Dashed = <any> 'dashed',
        Dotted = <any> 'dotted',
        Groove = <any> 'groove',
        Inset = <any> 'inset',
        None = <any> 'none',
        Outset = <any> 'outset',
        Ridge = <any> 'ridge',
        Solid = <any> 'solid'
    }
    export enum FontStyleEnum {
        Italic = <any> 'italic',
        Normal = <any> 'normal'
    }
    export enum TextAlignEnum {
        Center = <any> 'center',
        Left = <any> 'left',
        Right = <any> 'right'
    }
    export enum TextTableLayoutEnum {
        Auto = <any> 'auto',
        Fixed = <any> 'fixed',
        Inherit = <any> 'inherit',
        Initial = <any> 'initial'
    }
}
