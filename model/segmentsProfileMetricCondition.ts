/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { NumericOperatorFilter } from './numericOperatorFilter';
import { ProfileMetricEnum } from './profileMetricEnum';
import { ProfileMetricPropertyFilter } from './profileMetricPropertyFilter';
import { SegmentsProfileMetricConditionTimeframeFilter } from './segmentsProfileMetricConditionTimeframeFilter';
export class SegmentsProfileMetricCondition {
    'type': ProfileMetricEnum | 'profile-metric';
    'metricId': string;
    /**
    * Measurements for profile metrics.
    */
    'measurement': SegmentsProfileMetricCondition.MeasurementEnum | 'count' | 'sum';
    'measurementFilter': NumericOperatorFilter;
    'timeframeFilter': SegmentsProfileMetricConditionTimeframeFilter;
    'metricFilters'?: Array<ProfileMetricPropertyFilter> | null;


    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "type",
            "baseName": "type",
            "type": "ProfileMetricEnum"
        },
        {
            "name": "metricId",
            "baseName": "metric_id",
            "type": "string"
        },
        {
            "name": "measurement",
            "baseName": "measurement",
            "type": "SegmentsProfileMetricCondition.MeasurementEnum"
        },
        {
            "name": "measurementFilter",
            "baseName": "measurement_filter",
            "type": "NumericOperatorFilter"
        },
        {
            "name": "timeframeFilter",
            "baseName": "timeframe_filter",
            "type": "SegmentsProfileMetricConditionTimeframeFilter"
        },
        {
            "name": "metricFilters",
            "baseName": "metric_filters",
            "type": "Array<ProfileMetricPropertyFilter>"
        }    ];

    static getAttributeTypeMap() {
        return SegmentsProfileMetricCondition.attributeTypeMap;
    }
}

export namespace SegmentsProfileMetricCondition {
    export enum MeasurementEnum {
        Count = <any> 'count',
        Sum = <any> 'sum'
    }
}
