/**
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { DynamicButton } from './dynamicButton';
import { Step } from './step';
import { Teaser } from './teaser';
import { VersionProperties } from './versionProperties';
import { VersionStyles } from './versionStyles';
import { VersionTriggersInner } from './versionTriggersInner';
export class Version {
    'id'?: number | null;
    'steps': Array<Step>;
    'triggers'?: Array<VersionTriggersInner>;
    'teasers'?: Array<Teaser>;
    'dynamicButton'?: DynamicButton;
    'name'?: string | null;
    'styles'?: VersionStyles;
    'properties'?: VersionProperties;
    /**
    * Form type enumeration.
    */
    'type'?: Version.TypeEnum | 'banner' | 'embed' | 'flyout' | 'full_screen' | 'popup' = Version.TypeEnum.Popup;
    /**
    * Display location enumeration.
    */
    'location'?: Version.LocationEnum | 'bottom_center' | 'bottom_left' | 'bottom_right' | 'center_left' | 'center_right' | 'top_center' | 'top_left' | 'top_right' | null;
    /**
    * Form status enumeration.
    */
    'status'?: Version.StatusEnum | 'draft' | 'live' = Version.StatusEnum.Draft;
    'abTest'?: boolean = false;
    'specialties'?: Array<Version.SpecialtiesEnum> | Array<'BACK_IN_STOCK'>;


    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "steps",
            "baseName": "steps",
            "type": "Array<Step>"
        },
        {
            "name": "triggers",
            "baseName": "triggers",
            "type": "Array<VersionTriggersInner>"
        },
        {
            "name": "teasers",
            "baseName": "teasers",
            "type": "Array<Teaser>"
        },
        {
            "name": "dynamicButton",
            "baseName": "dynamic_button",
            "type": "DynamicButton"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "styles",
            "baseName": "styles",
            "type": "VersionStyles"
        },
        {
            "name": "properties",
            "baseName": "properties",
            "type": "VersionProperties"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "Version.TypeEnum"
        },
        {
            "name": "location",
            "baseName": "location",
            "type": "Version.LocationEnum"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "Version.StatusEnum"
        },
        {
            "name": "abTest",
            "baseName": "ab_test",
            "type": "boolean"
        },
        {
            "name": "specialties",
            "baseName": "specialties",
            "type": "Array<Version.SpecialtiesEnum>"
        }    ];

    static getAttributeTypeMap() {
        return Version.attributeTypeMap;
    }
}

export namespace Version {
    export enum TypeEnum {
        Banner = <any> 'banner',
        Embed = <any> 'embed',
        Flyout = <any> 'flyout',
        FullScreen = <any> 'full_screen',
        Popup = <any> 'popup'
    }
    export enum LocationEnum {
        BottomCenter = <any> 'bottom_center',
        BottomLeft = <any> 'bottom_left',
        BottomRight = <any> 'bottom_right',
        CenterLeft = <any> 'center_left',
        CenterRight = <any> 'center_right',
        TopCenter = <any> 'top_center',
        TopLeft = <any> 'top_left',
        TopRight = <any> 'top_right'
    }
    export enum StatusEnum {
        Draft = <any> 'draft',
        Live = <any> 'live'
    }
    export enum SpecialtiesEnum {
        BackInStock = <any> 'BACK_IN_STOCK'
    }
}
