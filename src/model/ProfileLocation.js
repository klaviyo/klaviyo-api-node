/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2023-02-22
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.32
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient.js';

/**
 * The ProfileLocation model module.
 * @module model/ProfileLocation
 * @version 2023-02-22
 */
export class ProfileLocation {
  /**
   * Constructs a new <code>ProfileLocation</code>.
   * @alias module:model/ProfileLocation
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ProfileLocation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProfileLocation} obj Optional instance to populate.
   * @return {module:model/ProfileLocation} The populated <code>ProfileLocation</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ProfileLocation();
      if (data.hasOwnProperty('address1'))
        obj.address1 = ApiClient.convertToType(data['address1'], 'String');
      if (data.hasOwnProperty('address2'))
        obj.address2 = ApiClient.convertToType(data['address2'], 'String');
      if (data.hasOwnProperty('city'))
        obj.city = ApiClient.convertToType(data['city'], 'String');
      if (data.hasOwnProperty('country'))
        obj.country = ApiClient.convertToType(data['country'], 'String');
      if (data.hasOwnProperty('latitude'))
        obj.latitude = ApiClient.convertToType(data['latitude'], Object);
      if (data.hasOwnProperty('longitude'))
        obj.longitude = ApiClient.convertToType(data['longitude'], Object);
      if (data.hasOwnProperty('region'))
        obj.region = ApiClient.convertToType(data['region'], 'String');
      if (data.hasOwnProperty('zip'))
        obj.zip = ApiClient.convertToType(data['zip'], 'String');
      if (data.hasOwnProperty('timezone'))
        obj.timezone = ApiClient.convertToType(data['timezone'], 'String');
    }
    return obj;
  }
}

/**
 * First line of street address
 * @member {String} address1
 */
ProfileLocation.prototype.address1 = undefined;

/**
 * Second line of street address
 * @member {String} address2
 */
ProfileLocation.prototype.address2 = undefined;

/**
 * City name
 * @member {String} city
 */
ProfileLocation.prototype.city = undefined;

/**
 * Country name
 * @member {String} country
 */
ProfileLocation.prototype.country = undefined;

/**
 * Latitude coordinate. We recommend providing a precision of four decimal places.
 * @member {Object} latitude
 */
ProfileLocation.prototype.latitude = undefined;

/**
 * Longitude coordinate. We recommend providing a precision of four decimal places.
 * @member {Object} longitude
 */
ProfileLocation.prototype.longitude = undefined;

/**
 * Region within a country, such as state or province
 * @member {String} region
 */
ProfileLocation.prototype.region = undefined;

/**
 * Zip code
 * @member {String} zip
 */
ProfileLocation.prototype.zip = undefined;

/**
 * Time zone name. We recommend using time zones from the IANA Time Zone Database.
 * @member {String} timezone
 */
ProfileLocation.prototype.timezone = undefined;

