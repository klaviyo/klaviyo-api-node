/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2023-02-22
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.32
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient.js';
import {AudiencesSubObject} from './AudiencesSubObject.js';
import {SendOptionsSubObject} from './SendOptionsSubObject.js';
import {SendStrategySubObject} from './SendStrategySubObject.js';
import {TrackingOptionsSubObject} from './TrackingOptionsSubObject.js';

/**
 * The CampaignCreateQueryAsSubResourceAttributes model module.
 * @module model/CampaignCreateQueryAsSubResourceAttributes
 * @version 2023-02-22
 */
export class CampaignCreateQueryAsSubResourceAttributes {
  /**
   * Constructs a new <code>CampaignCreateQueryAsSubResourceAttributes</code>.
   * @alias module:model/CampaignCreateQueryAsSubResourceAttributes
   * @class
   * @param name {String} The campaign name
   * @param channel {String} The type of campaign (email or sms, for example)
   * @param audiences {module:model/AudiencesSubObject} 
   * @param sendStrategy {module:model/SendStrategySubObject} 
   * @param sendOptions {module:model/SendOptionsSubObject} 
   */
  constructor(name, channel, audiences, sendStrategy, sendOptions) {
    this.name = name;
    this.channel = channel;
    this.audiences = audiences;
    this.sendStrategy = sendStrategy;
    this.sendOptions = sendOptions;
  }

  /**
   * Constructs a <code>CampaignCreateQueryAsSubResourceAttributes</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CampaignCreateQueryAsSubResourceAttributes} obj Optional instance to populate.
   * @return {module:model/CampaignCreateQueryAsSubResourceAttributes} The populated <code>CampaignCreateQueryAsSubResourceAttributes</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CampaignCreateQueryAsSubResourceAttributes();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('channel'))
        obj.channel = ApiClient.convertToType(data['channel'], 'String');
      if (data.hasOwnProperty('audiences'))
        obj.audiences = AudiencesSubObject.constructFromObject(data['audiences']);
      if (data.hasOwnProperty('send_strategy'))
        obj.sendStrategy = SendStrategySubObject.constructFromObject(data['send_strategy']);
      if (data.hasOwnProperty('send_options'))
        obj.sendOptions = SendOptionsSubObject.constructFromObject(data['send_options']);
      if (data.hasOwnProperty('tracking_options'))
        obj.trackingOptions = TrackingOptionsSubObject.constructFromObject(data['tracking_options']);
    }
    return obj;
  }
}

/**
 * The campaign name
 * @member {String} name
 */
CampaignCreateQueryAsSubResourceAttributes.prototype.name = undefined;

/**
 * The type of campaign (email or sms, for example)
 * @member {String} channel
 */
CampaignCreateQueryAsSubResourceAttributes.prototype.channel = undefined;

/**
 * @member {module:model/AudiencesSubObject} audiences
 */
CampaignCreateQueryAsSubResourceAttributes.prototype.audiences = undefined;

/**
 * @member {module:model/SendStrategySubObject} sendStrategy
 */
CampaignCreateQueryAsSubResourceAttributes.prototype.sendStrategy = undefined;

/**
 * @member {module:model/SendOptionsSubObject} sendOptions
 */
CampaignCreateQueryAsSubResourceAttributes.prototype.sendOptions = undefined;

/**
 * @member {module:model/TrackingOptionsSubObject} trackingOptions
 */
CampaignCreateQueryAsSubResourceAttributes.prototype.trackingOptions = undefined;

