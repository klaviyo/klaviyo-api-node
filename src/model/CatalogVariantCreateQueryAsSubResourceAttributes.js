/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2023-02-22
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.32
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient.js';

/**
 * The CatalogVariantCreateQueryAsSubResourceAttributes model module.
 * @module model/CatalogVariantCreateQueryAsSubResourceAttributes
 * @version 2023-02-22
 */
export class CatalogVariantCreateQueryAsSubResourceAttributes {
  /**
   * Constructs a new <code>CatalogVariantCreateQueryAsSubResourceAttributes</code>.
   * @alias module:model/CatalogVariantCreateQueryAsSubResourceAttributes
   * @class
   * @param externalId {String} The ID of the catalog item variant in an external system.
   * @param title {String} The title of the catalog item variant.
   * @param description {String} A description of the catalog item variant.
   * @param sku {String} The SKU of the catalog item variant.
   * @param inventoryQuantity {Number} The quantity of the catalog item variant currently in stock.
   * @param price {Number} This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).
   * @param url {String} URL pointing to the location of the catalog item variant on your website.
   */
  constructor(externalId, title, description, sku, inventoryQuantity, price, url) {
    this.externalId = externalId;
    this.title = title;
    this.description = description;
    this.sku = sku;
    this.inventoryQuantity = inventoryQuantity;
    this.price = price;
    this.url = url;
  }

  /**
   * Constructs a <code>CatalogVariantCreateQueryAsSubResourceAttributes</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CatalogVariantCreateQueryAsSubResourceAttributes} obj Optional instance to populate.
   * @return {module:model/CatalogVariantCreateQueryAsSubResourceAttributes} The populated <code>CatalogVariantCreateQueryAsSubResourceAttributes</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CatalogVariantCreateQueryAsSubResourceAttributes();
      if (data.hasOwnProperty('external_id'))
        obj.externalId = ApiClient.convertToType(data['external_id'], 'String');
      if (data.hasOwnProperty('catalog_type'))
        obj.catalogType = ApiClient.convertToType(data['catalog_type'], 'String');
      if (data.hasOwnProperty('integration_type'))
        obj.integrationType = ApiClient.convertToType(data['integration_type'], 'String');
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('sku'))
        obj.sku = ApiClient.convertToType(data['sku'], 'String');
      if (data.hasOwnProperty('inventory_policy'))
        obj.inventoryPolicy = ApiClient.convertToType(data['inventory_policy'], 'Number');
      if (data.hasOwnProperty('inventory_quantity'))
        obj.inventoryQuantity = ApiClient.convertToType(data['inventory_quantity'], 'Number');
      if (data.hasOwnProperty('price'))
        obj.price = ApiClient.convertToType(data['price'], 'Number');
      if (data.hasOwnProperty('url'))
        obj.url = ApiClient.convertToType(data['url'], 'String');
      if (data.hasOwnProperty('image_full_url'))
        obj.imageFullUrl = ApiClient.convertToType(data['image_full_url'], 'String');
      if (data.hasOwnProperty('image_thumbnail_url'))
        obj.imageThumbnailUrl = ApiClient.convertToType(data['image_thumbnail_url'], 'String');
      if (data.hasOwnProperty('images'))
        obj.images = ApiClient.convertToType(data['images'], ['String']);
      if (data.hasOwnProperty('custom_metadata'))
        obj.customMetadata = ApiClient.convertToType(data['custom_metadata'], Object);
      if (data.hasOwnProperty('published'))
        obj.published = ApiClient.convertToType(data['published'], 'Boolean');
    }
    return obj;
  }
}

/**
 * The ID of the catalog item variant in an external system.
 * @member {String} externalId
 */
CatalogVariantCreateQueryAsSubResourceAttributes.prototype.externalId = undefined;

/**
 * The type of catalog. Currently only \"$default\" is supported.
 * @member {String} catalogType
 * @default '$default'
 */
CatalogVariantCreateQueryAsSubResourceAttributes.prototype.catalogType = '$default';

/**
 * Allowed values for the <code>integrationType</code> property.
 * @enum {String}
 * @readonly
 */
CatalogVariantCreateQueryAsSubResourceAttributes.IntegrationTypeEnum = {
  /**
   * value: "$custom"
   * @const
   */
  custom: "$custom"
};
/**
 * The integration type. Currently only \"$custom\" is supported.
 * @member {module:model/CatalogVariantCreateQueryAsSubResourceAttributes.IntegrationTypeEnum} integrationType
 */
CatalogVariantCreateQueryAsSubResourceAttributes.prototype.integrationType = undefined;

/**
 * The title of the catalog item variant.
 * @member {String} title
 */
CatalogVariantCreateQueryAsSubResourceAttributes.prototype.title = undefined;

/**
 * A description of the catalog item variant.
 * @member {String} description
 */
CatalogVariantCreateQueryAsSubResourceAttributes.prototype.description = undefined;

/**
 * The SKU of the catalog item variant.
 * @member {String} sku
 */
CatalogVariantCreateQueryAsSubResourceAttributes.prototype.sku = undefined;

/**
 * Allowed values for the <code>inventoryPolicy</code> property.
 * @enum {Number}
 * @readonly
 */
CatalogVariantCreateQueryAsSubResourceAttributes.InventoryPolicyEnum = {
  /**
   * value: 0
   * @const
   */
  _0: 0,

  /**
   * value: 1
   * @const
   */
  _1: 1,

  /**
   * value: 2
   * @const
   */
  _2: 2
};
/**
 * This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values: `1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock. `0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity. 
 * @member {module:model/CatalogVariantCreateQueryAsSubResourceAttributes.InventoryPolicyEnum} inventoryPolicy
 */
CatalogVariantCreateQueryAsSubResourceAttributes.prototype.inventoryPolicy = undefined;

/**
 * The quantity of the catalog item variant currently in stock.
 * @member {Number} inventoryQuantity
 */
CatalogVariantCreateQueryAsSubResourceAttributes.prototype.inventoryQuantity = undefined;

/**
 * This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).
 * @member {Number} price
 */
CatalogVariantCreateQueryAsSubResourceAttributes.prototype.price = undefined;

/**
 * URL pointing to the location of the catalog item variant on your website.
 * @member {String} url
 */
CatalogVariantCreateQueryAsSubResourceAttributes.prototype.url = undefined;

/**
 * URL pointing to the location of a full image of the catalog item variant.
 * @member {String} imageFullUrl
 */
CatalogVariantCreateQueryAsSubResourceAttributes.prototype.imageFullUrl = undefined;

/**
 * URL pointing to the location of an image thumbnail of the catalog item variant.
 * @member {String} imageThumbnailUrl
 */
CatalogVariantCreateQueryAsSubResourceAttributes.prototype.imageThumbnailUrl = undefined;

/**
 * List of URLs pointing to the locations of images of the catalog item variant.
 * @member {Array.<String>} images
 */
CatalogVariantCreateQueryAsSubResourceAttributes.prototype.images = undefined;

/**
 * Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.
 * @member {Object} customMetadata
 */
CatalogVariantCreateQueryAsSubResourceAttributes.prototype.customMetadata = undefined;

/**
 * Boolean value indicating whether the catalog item variant is published.
 * @member {Boolean} published
 * @default true
 */
CatalogVariantCreateQueryAsSubResourceAttributes.prototype.published = true;

